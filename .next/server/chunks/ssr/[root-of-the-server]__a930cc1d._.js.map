{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_8b555d60.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"inter_8b555d60-module__qLZNuq__className\",\n  \"variable\": \"inter_8b555d60-module__qLZNuq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/inter_8b555d60.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.js%22,%22import%22:%22Inter%22,%22arguments%22:[{%22variable%22:%22--font-inter%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Abdel/Desktop/ENIAD-ASSISTANT/context/AppContext.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppContext() from the server but AppContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/AppContext.jsx <module evaluation>\",\n    \"AppContext\",\n);\nexport const AppContextProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppContextProvider() from the server but AppContextProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/AppContext.jsx <module evaluation>\",\n    \"AppContextProvider\",\n);\nexport const useAppContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAppContext() from the server but useAppContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/AppContext.jsx <module evaluation>\",\n    \"useAppContext\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,wDACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,wDACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,wDACA","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Abdel/Desktop/ENIAD-ASSISTANT/context/AppContext.jsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const AppContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppContext() from the server but AppContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/AppContext.jsx\",\n    \"AppContext\",\n);\nexport const AppContextProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppContextProvider() from the server but AppContextProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/AppContext.jsx\",\n    \"AppContextProvider\",\n);\nexport const useAppContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call useAppContext() from the server but useAppContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/context/AppContext.jsx\",\n    \"useAppContext\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,oCACA;AAEG,MAAM,qBAAqB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACpD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,oCACA;AAEG,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,oCACA","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Abdel/Desktop/ENIAD-ASSISTANT/app/layout.js"],"sourcesContent":["import { Inter } from \"next/font/google\";\nimport \"./globals.css\";\nimport \"./prism.css\";\nimport { ClerkProvider } from \"@clerk/nextjs\";\nimport { AppContextProvider } from \"@/context/AppContext\";\nimport { Toaster } from \"react-hot-toast\";\n\nconst inter = Inter({\n  variable: \"--font-inter\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata = {\n  title: \"Eniad-Assistant\",\n  description: \"AI Assistant\",\n  icons: {\n    icon: \"/favicon.ico\",\n  },\n};\n\nexport default function RootLayout({ children }) {\n  return (\n    <ClerkProvider>\n      <AppContextProvider>\n        <html lang=\"en\" suppressHydrationWarning={true}>\n          <body className={`${inter.className} antialiased`}>\n            <Toaster toastOptions={\n              {\n                success: {style: { background: \"black\", color: \"white\"}},\n                error: {style: { background: \"black\", color: \"white\"}}\n              }\n            }/>\n            {children}</body>\n        </html>\n      </AppContextProvider>\n    </ClerkProvider>\n  );\n}\n"],"names":[],"mappings":";;;;;;AAGA;AACA;AACA;;;;;;;;AAOO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;IACb,OAAO;QACL,MAAM;IACR;AACF;AAEe,SAAS,WAAW,EAAE,QAAQ,EAAE;IAC7C,qBACE,8OAAC,yKAAA,CAAA,gBAAa;kBACZ,cAAA,8OAAC,sHAAA,CAAA,qBAAkB;sBACjB,cAAA,8OAAC;gBAAK,MAAK;gBAAK,0BAA0B;0BACxC,cAAA,8OAAC;oBAAK,WAAW,GAAG,yIAAA,CAAA,UAAK,CAAC,SAAS,CAAC,YAAY,CAAC;;sCAC/C,8OAAC,uJAAA,CAAA,UAAO;4BAAC,cACP;gCACE,SAAS;oCAAC,OAAO;wCAAE,YAAY;wCAAS,OAAO;oCAAO;gCAAC;gCACvD,OAAO;oCAAC,OAAO;wCAAE,YAAY;wCAAS,OAAO;oCAAO;gCAAC;4BACvD;;;;;;wBAED;;;;;;;;;;;;;;;;;;;;;;AAKb","debugId":null}}]
}