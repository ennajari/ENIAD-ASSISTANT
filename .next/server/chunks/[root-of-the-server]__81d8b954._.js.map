{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Abdel/Desktop/ENIAD-ASSISTANT/config/db.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nlet cached = global.mongoose || {conn: null, promise: null};\n\nexport default async function connectDB(){\n    if(cached.conn) return cached.conn;\n    if(!cached.promise){\n        cached.promise = mongoose.connect(process.env.MONGODB_URI).then((mongoose) => mongoose);\n    }\n    try {\n        cached.conn = await cached.promise;\n    } catch (error) {\n        console.error(\"Error connecting to MongoDB:\", error);\n    }\n    return cached.conn\n}"],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,SAAS,OAAO,QAAQ,IAAI;IAAC,MAAM;IAAM,SAAS;AAAI;AAE3C,eAAe;IAC1B,IAAG,OAAO,IAAI,EAAE,OAAO,OAAO,IAAI;IAClC,IAAG,CAAC,OAAO,OAAO,EAAC;QACf,OAAO,OAAO,GAAG,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,WAAa;IAClF;IACA,IAAI;QACA,OAAO,IAAI,GAAG,MAAM,OAAO,OAAO;IACtC,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,gCAAgC;IAClD;IACA,OAAO,OAAO,IAAI;AACtB","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Abdel/Desktop/ENIAD-ASSISTANT/models/Chat.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst ChatSchema = new mongoose.Schema(\n    {\n        name: {type: String, required: true},\n        messages: [\n            {\n                role: {type: String, required: true},\n                content: {type: String, required: true},\n                timestamp: {type: Number, required: true},\n            },\n        ],\n        userId: {type: String, required: true},\n    },\n    {timestamps: true}\n);\n\nconst Chat = mongoose.models.Chat || mongoose.model(\"Chat\", ChatSchema)\n\nexport default Chat;"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,aAAa,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAClC;IACI,MAAM;QAAC,MAAM;QAAQ,UAAU;IAAI;IACnC,UAAU;QACN;YACI,MAAM;gBAAC,MAAM;gBAAQ,UAAU;YAAI;YACnC,SAAS;gBAAC,MAAM;gBAAQ,UAAU;YAAI;YACtC,WAAW;gBAAC,MAAM;gBAAQ,UAAU;YAAI;QAC5C;KACH;IACD,QAAQ;QAAC,MAAM;QAAQ,UAAU;IAAI;AACzC,GACA;IAAC,YAAY;AAAI;AAGrB,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,QAAQ;uCAE7C","debugId":null}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Abdel/Desktop/ENIAD-ASSISTANT/app/api/chat/delete/route.js"],"sourcesContent":["import connectDB from \"@/config/db\";\nimport Chat from \"@/models/Chat\";\nimport { getAuth } from \"@clerk/nextjs/server\";\nimport { NextResponse } from \"next/server\";\n\nexport async function POST(req){\n    try {\n     const { userId } = getAuth(req);\n     const { chatId } = await req.json();\n\n     \n    if (!userId) {\n      return NextResponse.json({\n        success: false,\n        message: \"User not authenticated\",\n      });\n    }\n\n    // Connect to the database and delete the chat\n\n    await connectDB();\n    await Chat.deleteOne({_id: chatId, userId})\n\n    return NextResponse.json({ success: true, message: \"Chat Deleted\" });\n\n    } catch (error) {\n        return NextResponse.json({ success: false, error: error.message });\n    }\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,GAAG;IAC1B,IAAI;QACH,MAAM,EAAE,MAAM,EAAE,GAAG,CAAA,GAAA,6KAAA,CAAA,UAAO,AAAD,EAAE;QAC3B,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,IAAI;QAGlC,IAAI,CAAC,QAAQ;YACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBACvB,SAAS;gBACT,SAAS;YACX;QACF;QAEA,8CAA8C;QAE9C,MAAM,CAAA,GAAA,8GAAA,CAAA,UAAS,AAAD;QACd,MAAM,gHAAA,CAAA,UAAI,CAAC,SAAS,CAAC;YAAC,KAAK;YAAQ;QAAM;QAEzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,SAAS;QAAe;IAElE,EAAE,OAAO,OAAO;QACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,OAAO,MAAM,OAAO;QAAC;IACpE;AACJ","debugId":null}}]
}