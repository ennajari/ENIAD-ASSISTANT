{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Abdel/Desktop/ENIAD-ASSISTANT/pages/api/chat/search.js"],"sourcesContent":["import axios from 'axios';\r\nimport * as cheerio from 'cheerio';\r\n\r\nconst BASE_URL = 'https://eniad.ump.ma';\r\nconst MAX_PAGES = 3;\r\nconst MAX_TITLES = 5;\r\n\r\nexport default async function handler(req, res) {\r\n    if (req.method !== 'POST') {\r\n        return res.status(405).json({ \r\n            success: false, \r\n            message: 'Method not allowed' \r\n        });\r\n    }\r\n\r\n    const { prompt, searchActive } = req.body;\r\n    \r\n    if (!searchActive) {\r\n        return res.status(200).json({\r\n            success: true,\r\n            data: {\r\n                role: 'assistant',\r\n                content: `Mode recherche désactivé pour: \"${prompt}\"`,\r\n                timestamp: Date.now(),\r\n            }\r\n        });\r\n    }\r\n\r\n    try {\r\n        // Scraping de la page principale\r\n        console.log(\"Starting website scraping...\");\r\n        const mainResponse = await axios.get(BASE_URL);\r\n        const $main = cheerio.load(mainResponse.data);\r\n        \r\n        // Extraction des liens pertinents\r\n        const links = new Set();\r\n        $main('a[href^=\"/\"]').each((_, el) => {\r\n            const href = $main(el).attr('href');\r\n            if (href && !href.includes('#') && links.size < MAX_PAGES) {\r\n                links.add(new URL(href, BASE_URL).href);\r\n            }\r\n        });\r\n\r\n        // Fonction de scraping\r\n        const scrapePage = async (url) => {\r\n            try {\r\n                const resp = await axios.get(url);\r\n                const $ = cheerio.load(resp.data);\r\n                const titles = [];\r\n                \r\n                $('h1, h2, h3').each((_, el) => {\r\n                    if (titles.length < MAX_TITLES) {\r\n                        const text = $(el).text().trim();\r\n                        if (text) titles.push(text);\r\n                    }\r\n                });\r\n                \r\n                return { url, titles };\r\n            } catch (error) {\r\n                return { url, error: error.message };\r\n            }\r\n        };\r\n\r\n        // Scraping parallèle des pages\r\n        const pages = await Promise.all(\r\n            Array.from(links).map(scrapePage)\r\n        );\r\n\r\n        // Construction de la réponse\r\n        let content = `🔍 Résultats de recherche pour \"${prompt}\":\\n\\n`;\r\n        \r\n        // Titres de la page principale\r\n        const mainTitles = [];\r\n        $main('h1, h2, h3').each((_, el) => {\r\n            if (mainTitles.length < MAX_TITLES) {\r\n                const text = $main(el).text().trim();\r\n                if (text) mainTitles.push(text);\r\n            }\r\n        });\r\n        \r\n        if (mainTitles.length) {\r\n            content += `Page principale:\\n${mainTitles.map(t => `- ${t}`).join('\\n')}\\n\\n`;\r\n        }\r\n\r\n        // Sous-pages\r\n        pages.forEach(page => {\r\n            content += `Page: ${page.url}\\n`;\r\n            if (page.error) {\r\n                content += `Erreur: ${page.error}\\n\\n`;\r\n            } else if (page.titles?.length) {\r\n                content += `${page.titles.map(t => `- ${t}`).join('\\n')}\\n\\n`;\r\n            } else {\r\n                content += `Aucun titre trouvé\\n\\n`;\r\n            }\r\n        });\r\n\r\n        console.log(\"Scraping completed successfully\");\r\n        return res.status(200).json({\r\n            success: true,\r\n            data: {\r\n                role: 'assistant',\r\n                content,\r\n                timestamp: Date.now()\r\n            }\r\n        });\r\n\r\n    } catch (error) {\r\n        console.error('Search error:', error);\r\n        return res.status(500).json({\r\n            success: false,\r\n            message: 'Erreur lors de la recherche',\r\n            error: error.message\r\n        });\r\n    }\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Abdel/Desktop/ENIAD-ASSISTANT/node_modules/next/dist/src/server/route-modules/pages-api/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/pages-api/module.js')\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.dev.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.dev.js')\n    }\n  } else {\n    if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/pages-api-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/pages-api.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","NODE_ENV","TURBOPACK"],"mappings":"AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,QAAQ,KAAK,WAAe;QAC1C,IAAIN,QAAQC,GAAG,CAACM,SAAS,eAAE;YACzBJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO;;QAEP;IACF,OAAO;;IAMP;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Abdel/Desktop/ENIAD-ASSISTANT/node_modules/next/dist/src/server/route-kind.ts"],"sourcesContent":["export const enum RouteKind {\n  /**\n   * `PAGES` represents all the React pages that are under `pages/`.\n   */\n  PAGES = 'PAGES',\n  /**\n   * `PAGES_API` represents all the API routes under `pages/api/`.\n   */\n  PAGES_API = 'PAGES_API',\n  /**\n   * `APP_PAGE` represents all the React pages that are under `app/` with the\n   * filename of `page.{j,t}s{,x}`.\n   */\n  APP_PAGE = 'APP_PAGE',\n  /**\n   * `APP_ROUTE` represents all the API routes and metadata routes that are under `app/` with the\n   * filename of `route.{j,t}s{,x}`.\n   */\n  APP_ROUTE = 'APP_ROUTE',\n\n  /**\n   * `IMAGE` represents all the images that are generated by `next/image`.\n   */\n  IMAGE = 'IMAGE',\n}\n"],"names":["RouteKind"],"mappings":";;;AAAO,IAAWA,YAAAA,WAAAA,GAAAA,SAAAA,SAAAA;IAChB;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;IAED;;GAEC,GAAA,SAAA,CAAA,YAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,WAAA,GAAA;IAED;;;GAGC,GAAA,SAAA,CAAA,YAAA,GAAA;IAGD;;GAEC,GAAA,SAAA,CAAA,QAAA,GAAA;WAtBeA;MAwBjB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Abdel/Desktop/ENIAD-ASSISTANT/node_modules/next/dist/src/build/templates/helpers.ts"],"sourcesContent":["/**\n * Hoists a name from a module or promised module.\n *\n * @param module the module to hoist the name from\n * @param name the name to hoist\n * @returns the value on the module (or promised module)\n */\nexport function hoist(module: any, name: string) {\n  // If the name is available in the module, return it.\n  if (name in module) {\n    return module[name]\n  }\n\n  // If a property called `then` exists, assume it's a promise and\n  // return a promise that resolves to the name.\n  if ('then' in module && typeof module.then === 'function') {\n    return module.then((mod: any) => hoist(mod, name))\n  }\n\n  // If we're trying to hoise the default export, and the module is a function,\n  // return the module itself.\n  if (typeof module === 'function' && name === 'default') {\n    return module\n  }\n\n  // Otherwise, return undefined.\n  return undefined\n}\n"],"names":["hoist","module","name","then","mod","undefined"],"mappings":"AAAA;;;;;;CAMC,GACD;;;AAAO,SAASA,MAAMC,MAAW,EAAEC,IAAY;IAC7C,qDAAqD;IACrD,IAAIA,QAAQD,QAAQ;QAClB,OAAOA,MAAM,CAACC,KAAK;IACrB;IAEA,gEAAgE;IAChE,8CAA8C;IAC9C,IAAI,UAAUD,UAAU,OAAOA,OAAOE,IAAI,KAAK,YAAY;QACzD,OAAOF,OAAOE,IAAI,CAAC,CAACC,MAAaJ,MAAMI,KAAKF;IAC9C;IAEA,6EAA6E;IAC7E,4BAA4B;IAC5B,IAAI,OAAOD,WAAW,cAAcC,SAAS,WAAW;QACtD,OAAOD;IACT;IAEA,+BAA+B;IAC/B,OAAOI;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Abdel/Desktop/ENIAD-ASSISTANT/node_modules/next/dist/src/build/templates/pages-api.ts"],"sourcesContent":["import { PagesAPIRouteModule } from '../../server/route-modules/pages-api/module.compiled'\nimport { RouteKind } from '../../server/route-kind'\n\nimport { hoist } from './helpers'\n\n// Import the userland code.\nimport * as userland from 'VAR_USERLAND'\n\n// Re-export the handler (should be the default export).\nexport default hoist(userland, 'default')\n\n// Re-export config.\nexport const config = hoist(userland, 'config')\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new PagesAPIRouteModule({\n  definition: {\n    kind: RouteKind.PAGES_API,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n  },\n  userland,\n})\n"],"names":["PagesAPIRouteModule","RouteKind","hoist","userland","config","routeModule","definition","kind","PAGES_API","page","pathname","bundlePath","filename"],"mappings":";;;;;AAAA,SAASA,mBAAmB,QAAQ,uDAAsD;AAC1F,SAASC,SAAS,QAAQ,0BAAyB;AAEnD,SAASC,KAAK,QAAQ,YAAW;AAEjC,4BAA4B;AAC5B,YAAYC,cAAc,eAAc;;;;;;;;;yMAGzBD,QAAAA,EAAMC,yHAAU,WAAU;AAGlC,MAAMC,2KAASF,QAAAA,EAAMC,yHAAU,UAAS;AAGxC,MAAME,cAAc,qMAAIL,sBAAAA,CAAoB;IACjDM,YAAY;QACVC,8JAAMN,YAAAA,CAAUO,SAAS;QACzBC,MAAM;QACNC,UAAU;QACV,2CAA2C;QAC3CC,YAAY;QACZC,UAAU;IACZ;cACAT;AACF,GAAE","ignoreList":[0],"debugId":null}}]
}